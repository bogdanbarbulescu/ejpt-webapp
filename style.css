/* style.css */

/* --- Existing styles from previous version --- */
:root {
    --sidebar-width: 280px;
    --content-bg: #2b3035;
    --code-bg: #1c1e21; /* Will be overridden by Prism theme */
    --code-text: #e8e6e3; /* Will be overridden by Prism theme */
    --sidebar-bg: #212529;
    --sidebar-link-hover: #343a40;
}

body {
    display: flex;
    height: 100vh;
    overflow: hidden;
}

#sidebar {
    width: var(--sidebar-width);
    height: 100vh;
    background-color: var(--sidebar-bg);
    padding-top: 1rem;
    flex-shrink: 0;
    overflow-y: auto;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    border-right: 1px solid var(--bs-border-color);
}

.sidebar-heading {
    padding: 0.5rem 1.25rem;
    font-size: 1.1rem;
    font-weight: bold;
    color: var(--bs-secondary-color);
    margin-bottom: 0.5rem;
}

.list-group-item {
    background-color: transparent;
    border: none;
    border-radius: 0.25rem;
    margin: 0 0.5rem 0.2rem 0.5rem;
    padding: 0.75rem 1.25rem;
    color: var(--bs-body-color);
    transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
}

.list-group-item.active {
    background-color: var(--bs-primary);
    color: #fff;
    font-weight: 500;
}

.list-group-item:hover:not(.active) {
    background-color: var(--sidebar-link-hover);
    color: var(--bs-light);
}

.list-group-item i {
    margin-right: 0.75rem;
    width: 1.2em;
    text-align: center;
}

#main-content {
    flex-grow: 1;
    height: 100vh;
    overflow-y: auto;
    padding: 2rem;
    background-color: var(--content-bg);
    margin-left: var(--sidebar-width);
}

.content-section {
    display: none;
    padding-bottom: 2rem;
}

.content-section.active {
    display: block;
}

h2, h3, h4 {
    margin-top: 1.75rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--bs-border-color-translucent);
    padding-bottom: 0.5rem;
    font-weight: 500;
}

h2:first-child, h3:first-child, h4:first-child {
     margin-top: 0;
 }

h2 i, h3 i, h4 i {
    margin-right: 0.5rem;
}

p, ul, ol {
    margin-bottom: 1rem;
    line-height: 1.6;
}

ul, ol {
    padding-left: 2rem; /* Default padding */
}

/* --- Code block styling (Prism will override most of this) --- */
pre {
    /* Keep basic structure */
    padding: 1rem;
    margin-top: 0.5rem;
    margin-bottom: 1rem;
    overflow: auto;
    border-radius: 0.375rem;
    /* Let Prism handle background, color, border */
}

code {
    /* Inline code styling */
    color: var(--code-text);
    word-wrap: break-word;
    background-color: rgba(110, 118, 129, 0.2);
    padding: 0.15em 0.4em;
    border-radius: 3px;
    font-size: 0.9em;
    font-family: var(--bs-font-monospace);
}

pre code {
    /* Reset inline styles for code within pre */
    background-color: transparent;
    padding: 0;
    border-radius: 0;
    font-size: inherit; /* Inherit from pre */
    color: inherit; /* Inherit from Prism theme */
    font-family: inherit; /* Inherit from Prism theme */
    white-space: inherit;
    word-wrap: normal;
}

/* --- Checklist specific styling --- */
.checklist ul {
    list-style: none;
    padding-left: 0; /* Remove default padding */
}
.checklist li {
    margin-bottom: 0.75rem;
    padding-left: 0; /* Remove default padding */
    position: relative; /* Needed for absolute positioning of custom checkbox */
}

/* Style the label to provide space and alignment */
.checklist label {
    display: inline-block; /* Allow padding/margin */
    margin-left: 2rem; /* Space for the custom checkbox */
    cursor: pointer;
    position: relative; /* Anchor for the pseudo-element */
    padding-top: 1px; /* Align text better with checkbox */
    vertical-align: top; /* Align label with top of checkbox */
}

/* Hide the actual checkbox */
.checklist input[type="checkbox"] {
    opacity: 0; /* Make it invisible but still focusable */
    position: absolute; /* Take out of flow */
    left: 0;
    top: 3px; /* Adjust vertical alignment */
    cursor: pointer;
    z-index: 1; /* Ensure it's clickable */
    width: 1.5rem; /* Clickable area */
    height: 1.5rem; /* Clickable area */
    margin: 0;
}

/* Style the custom checkbox using label's ::before */
.checklist label::before {
    content: "\F2DF"; /* Bootstrap Icons square */
    font-family: 'bootstrap-icons';
    position: absolute;
    left: -2rem; /* Position it where the padding was */
    top: 1px; /* Align vertically */
    font-size: 1.1rem;
    color: var(--bs-secondary-color);
    transition: color 0.15s ease-in-out, content 0.15s ease-in-out;
}

/* Style when checkbox is checked */
.checklist input[type="checkbox"]:checked + label::before {
    content: "\F26E"; /* Bootstrap Icons check-square-fill */
    color: var(--bs-success); /* Use Bootstrap success color */
}

/* Style when checkbox is focused (accessibility) */
.checklist input[type="checkbox"]:focus + label::before {
     box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
     border-radius: 3px; /* Match shape */
}

/* Ensure code blocks following list items are indented correctly */
.checklist li pre {
    margin-left: 2rem; /* Indent code blocks under checklist items */
    margin-top: 0.5rem;
}


/* --- Prism.js Toolbar/Copy Button Customization (Optional) --- */
div.code-toolbar {
    position: relative; /* Needed for button positioning */
}

div.code-toolbar > .toolbar {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    opacity: 0; /* Hide initially */
    transition: opacity 0.3s ease-in-out;
}

div.code-toolbar:hover > .toolbar {
    opacity: 1; /* Show on hover */
}

.toolbar .toolbar-item button {
    background: var(--bs-secondary);
    color: var(--bs-light);
    border: none;
    padding: 0.3rem 0.6rem;
    border-radius: 0.25rem;
    font-size: 0.8em;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.toolbar .toolbar-item button:hover {
    background: var(--bs-primary);
}

/* --- Prism.js Line Numbers Customization (Optional) --- */
pre.line-numbers {
    position: relative;
    padding-left: 3.8em; /* Make space for line numbers */
    counter-reset: linenumber;
}

pre.line-numbers > code {
    position: relative;
    white-space: inherit;
}

.line-numbers .line-numbers-rows {
    position: absolute;
    pointer-events: none;
    top: 1rem; /* Match pre padding */
    font-size: 100%;
    left: -3.8em; /* Position outside */
    width: 3em; /* Width of line number area */
    letter-spacing: -1px;
    border-right: 1px solid var(--bs-border-color-translucent);
    user-select: none;
}

.line-numbers-rows > span {
    pointer-events: none;
    display: block;
    counter-increment: linenumber;
}

.line-numbers-rows > span::before {
    content: counter(linenumber);
    color: var(--bs-secondary-color); /* Line number color */
    display: block;
    padding-right: 0.8em;
    text-align: right;
}